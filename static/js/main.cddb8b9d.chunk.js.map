{"version":3,"sources":["context/shop-context.tsx","context/reducers.tsx","context/GlobalState.tsx","components/Navigation/Navigation.tsx","pages/Products.tsx","pages/Cart.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["React","createContext","products","cart","addProductToCart","product","removeProductFromCart","productId","shopReducer","state","action","type","updatedCart","Object","toConsumableArray","updatedItemIndex","findIndex","item","id","push","objectSpread","quantity","updatedItem","console","log","splice","GlobalState","props","_useReducer","useReducer","_useReducer2","slicedToArray","cartState","dispatch","react_default","a","createElement","shop_context","Provider","value","title","price","setTimeout","children","Navigation","className","NavLink","exact","to","cartItemNumber","ProductsPage","binding","_useState","useState","_useState2","input","setInput","_useState3","_useState4","inputCost","setInputCost","_useState5","_useState6","inputSort","setInputSort","_useState7","_useState8","productsFiltered","setProductsFiltered","context","useContext","ShopContext","useEffect","filterItems","filteredItems","filter","toLowerCase","indexOf","isNaN","sort","b","localeCompare","Consumer","Fragment","components_Navigation_Navigation","reduce","count","curItem","onChange","e","currentTarget","placeholder","parseFloat","length","map","key","onClick","bind","CartPage","cartItem","App","context_GlobalState","BrowserRouter","Switch","Route","path","component","Redirect","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cddb8b9d.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Product {\n  id: string;\n  title: string;\n  price: number;\n}\n\ninterface Cart {\n  id: string;\n  title: string;\n  price: number;\n  quantity: number;\n}\n\ninterface ContextType {\n  products: Product[];\n  cart: Cart[];\n  [key: string]: any;\n}\n\nexport default React.createContext<ContextType>({\n  products: [],\n  cart: [],\n  addProductToCart: (product: Product) => {},\n  removeProductFromCart: (productId: string) => {}\n});\n","export const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\n\ninterface Product {\n  id: string;\n  title: string;\n  price: number;\n}\n\nconst addProductToCart = (product: Product, state: any) => {\n  const updatedCart = [...state.cart];\n  const updatedItemIndex = updatedCart.findIndex(\n    item => item.id === product.id\n  );\n\n  if (updatedItemIndex < 0) {\n    updatedCart.push({ ...product, quantity: 1 });\n  } else {\n    const updatedItem = {\n      ...updatedCart[updatedItemIndex]\n    };\n    updatedItem.quantity++;\n    updatedCart[updatedItemIndex] = updatedItem;\n  }\n  return { ...state, cart: updatedCart };\n};\n\nconst removeProductFromCart = (productId: string, state: any) => {\n  console.log('Removing product with id: ' + productId);\n  const updatedCart = [...state.cart];\n  const updatedItemIndex = updatedCart.findIndex(item => item.id === productId);\n\n  const updatedItem = {\n    ...updatedCart[updatedItemIndex]\n  };\n  updatedItem.quantity--;\n  if (updatedItem.quantity <= 0) {\n    updatedCart.splice(updatedItemIndex, 1);\n  } else {\n    updatedCart[updatedItemIndex] = updatedItem;\n  }\n  return { ...state, cart: updatedCart };\n};\n\nexport const shopReducer = (state: any, action: any) => {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      return addProductToCart(action.product, state);\n    case REMOVE_PRODUCT:\n      return removeProductFromCart(action.productId, state);\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\n\nimport ShopContext from './shop-context';\nimport { shopReducer, ADD_PRODUCT, REMOVE_PRODUCT } from './reducers';\n\ninterface Props {\n  children: any;\n}\n\ninterface Product {\n  id: string;\n  title: string;\n  price: number;\n}\n\nconst GlobalState = (props: Props) => {\n  const products = [\n    { id: 'p1', title: 'Gaming Mouse', price: 29.99 },\n    { id: 'p2', title: 'Harry Potter 3', price: 9.99 },\n    { id: 'p3', title: 'Used plastic bottle', price: 0.99 },\n    { id: 'p4', title: 'Half-dried plant', price: 2.99 },\n    { id: 'p5', title: 'Keyboard', price: 29.99 },\n    { id: 'p6', title: 'Monitor', price: 199.99 },\n    { id: 'p7', title: 'Headphones', price: 20.99 },\n    { id: 'p8', title: 'Microwave', price: 62.99 }\n  ];\n\n  const [cartState, dispatch] = useReducer(shopReducer, { cart: [] });\n\n  const addProductToCart = (product: Product) => {\n    setTimeout(() => {\n      dispatch({ type: ADD_PRODUCT, product: product });\n    }, 400);\n  };\n\n  const removeProductFromCart = (productId: string) => {\n    setTimeout(() => {\n      dispatch({ type: REMOVE_PRODUCT, productId: productId });\n    }, 400);\n  };\n\n  return (\n    <ShopContext.Provider\n      value={{\n        products: products,\n        cart: cartState.cart,\n        addProductToCart: addProductToCart,\n        removeProductFromCart: removeProductFromCart\n      }}\n    >\n      {props.children}\n    </ShopContext.Provider>\n  );\n};\n\nexport default GlobalState;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Navigation.scss';\n\ninterface Props {\n  cartItemNumber: number;\n}\n\nconst Navigation = (props: Props) => (\n  <header className='navigation'>\n    <nav className='navigation__items'>\n      <ul>\n        <li>\n          <NavLink exact to='/'>\n            Products\n          </NavLink>\n        </li>\n        <li>\n          <NavLink exact to='/cart'>\n            Cart ({props.cartItemNumber})\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Navigation;\n","import React, { useState, useContext, useEffect } from 'react';\n\nimport ShopContext from '../context/shop-context';\nimport Navigation from '../components/Navigation/Navigation';\n\nimport './Products.scss';\n\ninterface Props {}\n\nconst ProductsPage = (props: Props, binding: any) => {\n  const [input, setInput] = useState('');\n  const [inputCost, setInputCost] = useState(0);\n  const [inputSort, setInputSort] = useState('name');\n  const [productsFiltered, setProductsFiltered] = useState([{}]);\n  const context = useContext(ShopContext);\n\n  useEffect(() => {\n    filterItems();\n  });\n\n  const filterItems = () => {\n    let filteredItems = context.products\n      .filter(product => {\n        return product.title.toLowerCase().indexOf(input.toLowerCase()) !== -1;\n      })\n      .filter(product => {\n        if (isNaN(inputCost) || inputCost < 0) {\n          setInputCost(0);\n        }\n        return product.price >= inputCost;\n      })\n      .sort((a, b) => {\n        if (inputSort === 'name') {\n          return a.title.localeCompare(b.title);\n        } else {\n          return b.price - a.price;\n        }\n      });\n    setProductsFiltered(filteredItems);\n  };\n\n  return (\n    <ShopContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Navigation\n            cartItemNumber={context.cart.reduce((count, curItem) => {\n              return count + curItem.quantity;\n            }, 0)}\n          />\n          <main className='products'>\n            <ul>\n              <input\n                type='text'\n                className='searchBar'\n                value={input}\n                // @ts-ignore: currentTarget Error\n                // onInput={e => setInput(e.currentTarget.value)}\n                onChange={e => setInput(e.currentTarget.value)}\n                placeholder='Search Items In Store'\n              />\n              <input\n                type='number'\n                className='searchBar2'\n                value={inputCost}\n                // @ts-ignore: currentTarget Error\n                // onInput={e => setInputCost(parseFloat(e.currentTarget.value))}\n                onChange={e => setInputCost(parseFloat(e.currentTarget.value))}\n                placeholder='Max Price'\n              />\n              <select\n                className='dropdown'\n                value={inputSort}\n                onChange={e => setInputSort(e.currentTarget.value)}\n              >\n                <option value='name'>Name</option>\n                <option value='price'>Price</option>\n              </select>\n              {productsFiltered.length ? (\n                productsFiltered.map((product: any) => (\n                  <li key={product.id}>\n                    <div>\n                      <strong>{product.title}</strong> - £{product.price}\n                    </div>\n                    <div>\n                      <button\n                        onClick={context.addProductToCart.bind(\n                          binding,\n                          product\n                        )}\n                        className='products__button'\n                      >\n                        Add to Cart\n                      </button>\n                    </div>\n                  </li>\n                ))\n              ) : (\n                <p>\n                  Sorry there are no items that match this search, please try\n                  again.\n                </p>\n              )}\n            </ul>\n          </main>\n        </React.Fragment>\n      )}\n    </ShopContext.Consumer>\n  );\n};\n\nexport default ProductsPage;\n","import React, { useContext, useEffect } from 'react';\n\nimport ShopContext from '../context/shop-context';\nimport Navigation from '../components/Navigation/Navigation';\n\nimport './Cart.scss';\n\ninterface Props {}\n\nconst CartPage = (props: Props, binding: any) => {\n  const context = useContext(ShopContext);\n\n  useEffect(() => {\n    console.log(context);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Navigation\n        cartItemNumber={context.cart.reduce((count, curItem) => {\n          return count + curItem.quantity;\n        }, 0)}\n      />\n      <main className='cart'>\n        {context.cart.length <= 0 && <p>No Item in the Cart!</p>}\n        <ul>\n          {context.cart.map(cartItem => (\n            <li key={cartItem.id}>\n              <div>\n                <strong>{cartItem.title}</strong> - £{cartItem.price} (\n                {cartItem.quantity})\n              </div>\n              <div>\n                <button\n                  onClick={context.removeProductFromCart.bind(\n                    binding,\n                    cartItem.id\n                  )}\n                  className='cart__button'\n                >\n                  Remove from Cart\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default CartPage;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport GlobalState from './context/GlobalState';\nimport ProductsPage from './pages/Products';\nimport CartPage from './pages/Cart';\nimport './App.scss';\n\ninterface Props {}\n\nconst App = (props: Props) => {\n  return (\n    <GlobalState>\n      <BrowserRouter>\n        <Switch>\n          <Route path='/' component={ProductsPage} exact />\n          <Route path='/cart' component={CartPage} />\n          <Redirect to='/' />\n        </Switch>\n      </BrowserRouter>\n    </GlobalState>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}